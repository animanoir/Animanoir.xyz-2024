---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import { SITE_TITLE } from "../../consts";
import { getCollection } from "astro:content";
import { Picture } from "astro:assets";
import Navbar from "@/components/Navbar.astro";
import avisualsCover from "@/images/works/visuals/visuals-cover.jpg";
import * as motion from "motion/react-client";

const posts = (await getCollection("works")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Fisher-Yates shuffle algorithm to randomize the posts
for (let i = posts.length - 1; i > 0; i--) {
  const j = Math.floor(Math.random() * (i + 1));
  [posts[i], posts[j]] = [posts[j], posts[i]];
}

// Random rotation of the posts
function randomRotation() {
  //let theta = Math.random() * -180.0;
  let theta = 0.0;

  return theta;
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={"Works"} />
  </head>
  <body>
    <Header />
    <Navbar />
    <main>
      <section>
        <div class="projectsContainer">
          <div class="listContainer">
            <h2
              style={{
                transform: `rotate(${randomRotation()}deg)`,
              }}
              class="workType"
            >
              A/Visual 3D
            </h2>
            <ul>
              <li class="project">
                <a href="/avisuals">
                  <Picture
                    class="postHeroImg"
                    src={avisualsCover}
                    alt="A/visuals by Óscar A. Montiel"
                    formats={["webp"]}
                    quality={100}
                    decoding="async"
                    loading="lazy"
                  />
                  <div class="postInfo">
                    <p class="postTitle">3D/A/visuals</p>
                    <p class="year">on-going</p>
                  </div>
                </a>
              </li>
              {
                posts.map((post) => {
                  const { workType } = post.data;
                  const audioVisual3dWork = workType.find(
                    (work) => work === "3D"
                  );
                  if (audioVisual3dWork) {
                    return (
                      <li class="project">
                        <a href={`/works/${post.slug}/`}>
                          <Picture
                            class="postHeroImg"
                            src={post.data.heroImage}
                            alt={`${post.data.title} by Óscar A. Montiel`}
                            formats={["webp"]}
                            decoding="async"
                            loading="lazy"
                          />
                          <div class="postInfo">
                            <p class="postTitle">{post.data.title}</p>
                            <p class="year">{post.data.year || "on-going"}</p>
                          </div>
                        </a>
                      </li>
                    );
                  }
                })
              }
            </ul>
          </div>
          <div class="listContainer">
            <h2
              style={{
                transform: `rotate(${randomRotation()}deg)`,
              }}
              class="workType"
            >
              Interactive Art
            </h2>
            <ul>
              {
                posts.map((post) => {
                  const { workType } = post.data;
                  const interactiveArtWork = workType.find(
                    (work) => work === "Interactive Art"
                  );
                  if (interactiveArtWork) {
                    return (
                      <li class="project">
                        <a href={`/works/${post.slug}/`}>
                          <Picture
                            class="postHeroImg"
                            src={post.data.heroImage}
                            alt={`${post.data.title} by Óscar A. Montiel`}
                            formats={["webp"]}
                            decoding="async"
                            loading="lazy"
                          />
                          <div class="postInfo">
                            <p class="postTitle">{post.data.title}</p>
                            <p class="year">{post.data.year || "on-going"}</p>
                          </div>
                        </a>
                      </li>
                    );
                  }
                })
              }
            </ul>
          </div>
          <div class="listContainer">
            <h2
              style={{
                transform: `rotate(${randomRotation()}deg)`,
              }}
              class="workType"
            >
              Web Development
            </h2>
            <ul>
              {
                posts.map((post) => {
                  const { workType } = post.data;
                  const webDevelopmentWork = workType.find(
                    (work) => work === "Web Development"
                  );
                  if (webDevelopmentWork) {
                    return (
                      <li class="project">
                        <a href={`/works/${post.slug}/`}>
                          <Picture
                            class="postHeroImg"
                            src={post.data.heroImage}
                            alt={`${post.data.title} by Óscar A. Montiel`}
                            formats={["webp"]}
                            decoding="async"
                            loading="lazy"
                          />
                          <div class="postInfo">
                            <p class="postTitle">{post.data.title}</p>
                            <p class="year">{post.data.year || "on-going"}</p>
                          </div>
                        </a>
                      </li>
                    );
                  }
                })
              }
            </ul>
          </div>
          <div class="listContainer">
            <h2
              style={{
                transform: `rotate(${randomRotation()}deg)`,
              }}
              class="workType"
            >
              Projects
            </h2>
            <ul>
              {
                posts.map((post) => {
                  const { workType } = post.data;
                  const projectWork = workType.find(
                    (work) => work === "Project"
                  );
                  if (projectWork) {
                    return (
                      <li class="project">
                        <a href={`/works/${post.slug}/`}>
                          <Picture
                            class="postHeroImg"
                            src={post.data.heroImage}
                            alt={`${post.data.title} by Óscar A. Montiel`}
                            formats={["webp"]}
                            decoding="async"
                            loading="lazy"
                          />
                          <div class="postInfo">
                            <p class="postTitle">{post.data.title}</p>
                            <p class="year">{post.data.year || "on-going"}</p>
                          </div>
                        </a>
                      </li>
                    );
                  }
                })
              }
            </ul>
          </div>
          <!-- <ul>
            {
              posts.map((post) => (
                <li class="project">
                  <a href={`/works/${post.slug}/`}>
                    <Picture
                      class="postHeroImg"
                      src={post.data.heroImage}
                      alt={`${post.data.title} by Óscar A. Montiel`}
                      formats={["webp"]}
                      decoding="async"
                      loading="lazy"
                    />
                    <div class="postInfo">
                      <p class="postTitle">{post.data.title}</p>
                      <p class="year">{post.data.year || "on-going"}</p>
                    </div>
                  </a>
                </li>
              ))
            }
          </ul> -->
        </div>
      </section>
    </main>
    <style>
      /* Layout */
      .projectsContainer {
        width: 50vw;
        margin: 0 auto;
        padding-top: 3rem;
      }

      .listContainer {
        padding-bottom: 10rem;
      }

      /* Typography */
      .postTitle,
      .year,
      .workType {
        font-family: "Montserrat", sans-serif;
        color: floralwhite;
        margin: 0;
        padding: 0;
        text-align: center;
        display: block;
        position: relative;
      }

      .workType {
        font-size: 4rem;
        z-index: 100;
      }

      .postTitle {
        font-size: 2.3rem;
        padding: 0.8rem 0.8rem 0;
        line-height: 1;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
      }

      .year {
        font-size: 1rem;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
      }

      /* Grid layout */
      ul {
        list-style-type: none;
        padding: 0;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.5rem;
        overflow: hidden;
      }

      ul li {
        display: flex;
        flex-direction: column;
      }

      /* Project elements */
      .project {
        height: 50vh;
      }

      /* Links and images */
      ul a {
        filter: hue-rotate(0deg);
        transition: filter 0.8s ease-in-out;
        height: 100%;
        position: relative;
      }

      ul a:hover {
        filter: hue-rotate(180deg);
      }

      .postHeroImg {
        height: 100%;
        width: 100%;
        object-fit: cover;
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
      }

      .postHeroImg.loaded {
        opacity: 1;
      }

      /* Post info overlay */
      .postInfo {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        display: none;
        z-index: 10;
        width: 90%;
      }

      .project:hover .postInfo {
        display: block;
      }

      /* Responsive layout */
      @media (max-width: 768px) {
        .projectsContainer {
          width: 100%;
          margin: 0;
          padding-top: 5rem;
        }

        .listContainer {
          padding-bottom: 5rem;
        }

        ul {
          grid-template-columns: 1fr;
          /* gap: 1.5rem; */
        }

        .workType {
          font-size: 3rem !important;
          padding-bottom: 2rem;
          /* Override the inline rotation style for mobile */
          transform: none !important;
        }

        /* Fix opacity issues on mobile */
        .project {
          opacity: 1;
          height: 40vh;
        }

        .postHeroImg {
          opacity: 0.7;
        }

        /* Always show post info on mobile */
        .postInfo {
          display: block;
          background-color: rgba(0, 0, 0, 0.5);
          padding: 0.5rem;
          border-radius: 4px;
        }

        .postTitle {
          font-size: 1.8rem;
        }
      }
    </style>
  </body>
</html>
