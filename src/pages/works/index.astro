---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import { SITE_TITLE } from "../../consts";
import { getCollection } from "astro:content";
import { Picture } from "astro:assets";
import avisualsCover from "@/images/works/visuals/visuals-cover.jpg";
import { motion } from "motion/react";
import "../../styles/global.css";

// Orders the post chronologically
const posts = (await getCollection("works")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Fisher-Yates shuffle algorithm to randomize the posts
for (let i = posts.length - 1; i > 0; i--) {
  const j = Math.floor(Math.random() * (i + 1));
  [posts[i], posts[j]] = [posts[j], posts[i]];
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={"Works"} />
  </head>
  <body>
    <Header />
    <main>
      <motion.div
        client:load
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8, ease: "easeOut" }}
      >
        <div class="quote-container">
          <h1 class="quote">
            <b>Óscar A. Montiel</b> is a <b class="animated-gradient-text"
              >Software Engineer</b
            > specialized in
            <b>Web Development</b>, <b class="animated-gradient-text-1"
              >Game Programming</b
            >,
            <b class="animated-gradient-text-2">3D Artist</b> & <b
              class="animated-gradient-text-3">Multimedia Interactive Art</b
            >.
          </h1>
        </div>
      </motion.div>
      <section>
        <div class="projectsContainer">
          <motion.div
            client:load
            initial={{ opacity: 0, x: 30 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true, amount: 0.5 }}
            transition={{ duration: 0.6, ease: "easeOut" }}
          >
            <div class="listContainer">
              <div class="section-title">
                <h2 class="workType">3D Art & Animations</h2>
                <h3>
                  <b>Animations</b> for your eyes and soul.
                </h3>
                <h4 class="section-description">
                  I specialize in developing compelling visual content using
                  industry-standard tools including <b
                    >Max/MSP, Blender, Three.js, and Godot</b
                  >. My approach combines technical expertise with creative
                  vision to deliver engaging digital experiences. I'm committed
                  to staying current with emerging technologies and continuously
                  expanding my toolkit to meet evolving project requirements.
                </h4>
              </div>
              <ul>
                <li class="project">
                  <a href="/avisuals">
                    <Picture
                      class="postHeroImg"
                      src={avisualsCover}
                      alt="A/visuals by Óscar A. Montiel"
                      formats={["webp"]}
                      quality={100}
                      decoding="async"
                      loading="lazy"
                    />
                    <div class="postInfo">
                      <p class="postTitle">3D/A/visuals</p>
                      <p class="year">on-going</p>
                    </div>
                  </a>
                </li>
                {
                  posts.map((post) => {
                    const { workType } = post.data;
                    const audioVisual3dWork = workType.find(
                      (work) => work === "3D"
                    );
                    if (audioVisual3dWork) {
                      return (
                        <motion.div
                          client:load
                          initial={{ opacity: 0, x: 30 }}
                          whileInView={{ opacity: 1, x: 0 }}
                          viewport={{ once: true, amount: 0.5 }}
                          transition={{
                            duration: Math.random() * 0.1 + 0.6,
                            ease: "easeInOut",
                          }}
                        >
                          <li class="project">
                            <a href={`/works/${post.slug}/`}>
                              <Picture
                                class="postHeroImg"
                                src={post.data.heroImage}
                                alt={`${post.data.title} by Óscar A. Montiel`}
                                formats={["webp"]}
                                decoding="async"
                                loading="lazy"
                              />
                              <div class="postInfo">
                                <p class="postTitle">{post.data.title}</p>
                                <p class="year">
                                  {post.data.year || "on-going"}
                                </p>
                              </div>
                            </a>
                          </li>
                        </motion.div>
                      );
                    }
                  })
                }
              </ul>
            </div>
          </motion.div>
          <motion.div
            client:load
            initial={{ opacity: 0, x: -30 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true, amount: 0.5 }}
            transition={{ duration: 0.6, ease: "easeOut" }}
          >
            <div class="listContainer lc-row-reverse">
              <div class="section-title">
                <h2 class="workType">Interactive Art</h2>
                <h3>
                  Playing the <b>Play Metaphysics</b> to create art you can <i
                    >Be</i
                  >.
                </h3>
                <h4 class="section-description">
                  Oh, yeah... That's right... <b>I'm an Artist too!</b> A true one,
                  of course. And such my duty is to explain reality in the most simple
                  ways possible. At the moment I'm exploring the expressivness of
                  <b>videogames</b>. I'm mostly inspired by how weird society is
                  and really complex and killjoy <a href="/books"
                    >critical theory</a
                  >.
                </h4>
              </div>
              <ul>
                {
                  posts.map((post) => {
                    const { workType } = post.data;
                    const interactiveArtWork = workType.find(
                      (work) => work === "Interactive Art"
                    );
                    if (interactiveArtWork) {
                      return (
                        <li class="project">
                          <a href={`/works/${post.slug}/`}>
                            <Picture
                              class="postHeroImg"
                              src={post.data.heroImage}
                              alt={`${post.data.title} by Óscar A. Montiel`}
                              formats={["webp"]}
                              decoding="async"
                              loading="lazy"
                            />
                            <div class="postInfo">
                              <p class="postTitle">{post.data.title}</p>
                              <p class="year">{post.data.year || "on-going"}</p>
                            </div>
                          </a>
                        </li>
                      );
                    }
                  })
                }
              </ul>
            </div>
          </motion.div>
          <motion.div
            client:load
            initial={{ opacity: 0, x: 30 }}
            whileInView={{ opacity: 1, x: 0 }}
            viewport={{ once: true, amount: 0.5 }}
            transition={{ duration: 0.6, ease: "easeOut" }}
          >
            <div class="listContainer">
              <div class="section-title">
                <h2 class="workType">Projects</h2>
                <h3>
                  Assortment of passion projects made with pain, blood and
                  soul-crushing fun.
                </h3>
                <h4 class="section-description">
                  As a human being with emotions and qualia, it happens that I
                  don't "identify" with my career so I have the freedom to
                  pursue whatever I want to do. So apart from being whatever I
                  do, I also like to do music as <b>Geosmina</b>
                  and write as <b>Óscar A. Montiel</b>. In fact, I just do fun
                  things for the sake of it. Honestly, what else is there to
                  live for?
                </h4>
              </div>
              <ul>
                {
                  posts.map((post) => {
                    const { workType } = post.data;
                    const projectWork = workType.find(
                      (work) => work === "Project"
                    );
                    if (projectWork) {
                      return (
                        <li class="project">
                          <a href={`/works/${post.slug}/`}>
                            <Picture
                              class="postHeroImg"
                              src={post.data.heroImage}
                              alt={`${post.data.title} by Óscar A. Montiel`}
                              formats={["webp"]}
                              decoding="async"
                              loading="lazy"
                            />
                            <div class="postInfo">
                              <p class="postTitle">{post.data.title}</p>
                              <p class="year">{post.data.year || "on-going"}</p>
                            </div>
                          </a>
                        </li>
                      );
                    }
                  })
                }
              </ul>
            </div>
          </motion.div>
        </div>
      </section>
    </main>
    <style>
      .quote {
        font-family: "Montserrat", sans-serif;
        font-size: 3.5rem;
        line-height: 1.35;
        font-weight: 500;
        margin: 0;
        max-width: 70%;
      }
      .quote-container {
        width: 99vw;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        box-sizing: border-box;
      }
      .section-title {
        width: 30% !important;
      }
      .projectsContainer {
        width: 70vw;
        margin: 0 auto;
        max-width: 70vw;
        padding-top: 3rem;
      }
      .section-description {
        font-family: "Open Sans", sans-serif !important;
        font-style: normal;
        font-weight: normal;
        font-size: 0.9rem;
        text-align: justify;
        color: #e0e0e0;
        line-height: 1.5;
      }
      .listContainer {
        padding-bottom: 15rem;
        width: 100%;
        display: flex;
        justify-content: space-evenly;
      }
      .lc-row-reverse {
        flex-direction: row-reverse !important;
      }

      .postTitle,
      .year,
      .workType {
        font-family: "Montserrat", sans-serif;
        color: floralwhite;
        margin: 0;
        padding: 0;
      }
      .workType {
        font-size: 3.5rem;
        z-index: 100;
        font-weight: 600;
        line-height: 1.2;
        margin-bottom: 1.5rem;
      }
      .postInfo {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
        z-index: 10;
        width: 70%;
      }
      .postTitle {
        font-size: 1.5rem;
        line-height: 1.25;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
        font-weight: 500;
        text-align: initial;
      }

      .year {
        font-size: 0.9rem;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
        font-weight: 400;
      }

      ul {
        list-style-type: none;
        padding: 0;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.5rem;
        overflow: hidden;
        width: 60%;
      }

      ul li {
        display: flex;
      }

      .project {
        height: 100%;
        width: 100%;
      }

      ul a {
        filter: hue-rotate(0deg);
        transition: filter 0.8s ease-in-out;
        height: 100%;
        position: relative;
      }

      ul a:hover {
        filter: hue-rotate(180deg);
      }

      .postHeroImg {
        height: 100%;
        width: 100%;
        object-fit: cover;
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
      }

      .postHeroImg.loaded {
        opacity: 1;
      }

      .project:hover .postInfo {
        display: block;
      }
      @media (max-width: 760px) {
        .mainquote {
          font-size: 2rem;
        }
        .projectsContainer {
          width: 100%;
          margin: 0;
          margin: 0 auto;
        }

        .listContainer {
          padding-bottom: 5rem;
          flex-direction: column;
          display: block;
          justify-content: initial;
        }
        .section-title {
          width: 100% !important;
          text-align: center;
        }
        .workType {
          font-size: 2.75rem;
          transform: none !important;
        }
        ul {
          width: 100%;
          grid-template-columns: repeat(1, 1fr);
        }

        .project {
          opacity: 1;
          height: 40vh;
        }

        .postHeroImg {
          opacity: 0.7;
        }

        .postInfo {
          display: block;
          background-color: rgba(0, 0, 0, 0.5);
          padding: 0.5rem;
          border-radius: 4px;
        }

        .postTitle {
          font-size: 1.6rem;
        }
      }
      .projectsContainer h3 {
        margin-block-start: 0 !important;
        margin-bottom: 2.5rem;
        font-size: 1.25rem;
        font-weight: 400;
        line-height: 1.6;
        color: #e0e0e0;
      }
      .animated-gradient-text {
        background-image: linear-gradient(
          90deg,
          #ec4899,
          #f97316,
          #eab308,
          #84cc16,
          #22c55e,
          #14b8a6,
          #0ea5e9,
          #6366f1,
          #a855f7,
          #ec4899
        );
        background-size: 200% auto;
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        animation: gradient-flow 5s linear infinite;
        cursor: default;
      }

      .animated-gradient-text-1 {
        background-image: linear-gradient(
          90deg,
          #ff6b6b,
          #4ecdc4,
          #45b7d1,
          #96ceb4,
          #feca57,
          #ff9ff3,
          #54a0ff,
          #5f27cd,
          #ff6b6b
        );
        background-size: 200% auto;
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        animation: gradient-flow 5s linear infinite;
        cursor: default;
      }

      .animated-gradient-text-2 {
        background-image: linear-gradient(
          90deg,
          #667eea,
          #764ba2,
          #f093fb,
          #f5576c,
          #4facfe,
          #00f2fe,
          #43e97b,
          #38f9d7,
          #667eea
        );
        background-size: 200% auto;
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        animation: gradient-flow 5s linear infinite;
        cursor: default;
      }

      .animated-gradient-text-3 {
        background-image: linear-gradient(
          90deg,
          #ee0979,
          #ff6a00,
          #fcb045,
          #fd1d1d,
          #833ab4,
          #fd1d1d,
          #fcb045,
          #ff6a00,
          #ee0979
        );
        background-size: 200% auto;
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        animation: gradient-flow 5s linear infinite;
        cursor: default;
      }
      /* For larger screens (beyond HD) */
      @media (min-width: 1921px) {
        .mainquote {
          font-size: 4rem;
        }
      }
    </style>
  </body>
</html>
