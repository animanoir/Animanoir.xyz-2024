/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF, meshBounds } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import * as THREE from "three";

export function ModelANLogo(props) {
  const { gl } = useThree();
  const { nodes, materials } = useGLTF("./animanoir-logo-3d.glb");
  const meshRef = useRef();
  const [clicked, setClicked] = useState(false);

  useFrame((state, delta) => {
    if (meshRef.current) {
      meshRef.current.rotation.z += delta * -0.3;
    }
  });

  const clickHandler = () => {
    setClicked((prev) => !prev);
    meshRef.current.material.wireframe = !clicked;
  };

  const mouseOverHandler = () => {
    meshRef.current.material.color.set(
      `hsl(${Math.random() * 360}, 100%, 80%)`
    );
  };

  return (
    <>
      <mesh
        onClick={clickHandler}
        ref={meshRef}
        raycast={meshBounds}
        geometry={nodes.Curve.geometry}
        material={nodes.Curve.material}
        position={[0, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={55}
        onPointerOver={(e) => {
          gl.domElement.style.cursor = "pointer";
          mouseOverHandler();
        }}
        onPointerOut={(e) => {
          gl.domElement.style.cursor = "auto";
        }}
      >
      <meshPhysicalMaterial
        metalness={0.0}
        roughness={0.2}
        transmission={1.0}
        thickness={0.5}
        ior={2.417}
        clearcoat={1}
        clearcoatRoughness={0.1}
        envMapIntensity={1}
      />
      </mesh>
    </>
  );
}

useGLTF.preload("/animanoir-logo-3d.glb");
